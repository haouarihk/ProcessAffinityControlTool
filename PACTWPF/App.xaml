<Application x:Class="PACTWPF.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:local="clr-namespace:PACTWPF"
             xmlns:System="clr-namespace:System;assembly=mscorlib"
             StartupUri="MainWindow.xaml">
    <Application.Resources>

        <System:Double x:Key="FontSize_Default">18.0</System:Double>
        <System:Double x:Key="FontSize_Big">22.0</System:Double>

        <SolidColorBrush x:Key="Theme.Window.Background" Color="#121212" />
        <SolidColorBrush x:Key="Theme.Window.Foreground" Color="#DFDFDF" />
        <SolidColorBrush x:Key="Theme.Window.BorderBrush" Color="#272727" />
        <CornerRadius    x:Key="Theme.Window.Radius">4</CornerRadius>
        <Thickness       x:Key="Theme.Window.Margin">4</Thickness>

        <SolidColorBrush x:Key="Theme.Item.Background" Color="#373737" />
        <SolidColorBrush x:Key="Theme.Item.Foreground" Color="#DFDFDF" />
        <SolidColorBrush x:Key="Theme.Item.Background_Disabled" Color="#202020" />
        <SolidColorBrush x:Key="Theme.Item.Foreground_Disabled" Color="#404040" />
        <SolidColorBrush x:Key="Theme.Item.BorderBrush" Color="#272727" />
        
        <CornerRadius    x:Key="Theme.Item.Radius">4</CornerRadius>
        <Thickness       x:Key="Theme.Item.Margin">4</Thickness>
        <Thickness       x:Key="Theme.Item.OuterMargin">2</Thickness>
        
        <CornerRadius    x:Key="Theme.Item.TopRoundRadius" TopLeft="4" TopRight="4"/>
        <Thickness       x:Key="Theme.Item.TopRoundThickness" Top="4" Left="4" Right="4"/>

        <SolidColorBrush x:Key="Theme.Accent" Color="Crimson" />

        <Style TargetType="{x:Type Window}">
            <Setter Property="SnapsToDevicePixels" Value="True" />

            <Setter Property="FontSize" Value="{StaticResource FontSize_Default}"/>
            <Setter Property="Background" Value="{StaticResource Theme.Window.Background}" />
            <Setter Property="Foreground" Value="{StaticResource Theme.Window.Foreground}" />

            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Window}">
                        <Border Background="{TemplateBinding Background}" CornerRadius="{StaticResource Theme.Window.Radius}" Margin="{StaticResource Theme.Window.Margin}"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="FocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="2" StrokeDashArray="1 2" SnapsToDevicePixels="true" StrokeThickness="1" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="OptionMarkFocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="14,0,0,0" StrokeDashArray="1 2" SnapsToDevicePixels="true" StrokeThickness="1" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        
        <Style TargetType="{x:Type CheckBox}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Background" Value="{StaticResource Theme.Item.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource Theme.Item.BorderBrush}"/>
            <Setter Property="Foreground" Value="{StaticResource Theme.Item.Foreground}"/>
            <Setter Property="BorderThickness" Value="1"/>

            <Setter Property="HorizontalAlignment" Value="Center"/>
            <Setter Property="VerticalAlignment" Value="Top"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Top"/>

            <Setter Property="RenderTransform">
                <Setter.Value>
                    <ScaleTransform ScaleX="2" ScaleY="2"/>
                </Setter.Value>
            </Setter>
            
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type CheckBox}">
                        <Grid x:Name="templateRoot"
                              Background="Transparent"
                              SnapsToDevicePixels="True">
                            
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            
                            <Border x:Name="checkBoxBorder"
                                    Background="{TemplateBinding Background}"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                    Margin="1" VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                                <Grid x:Name="markGrid">
                                    <Path x:Name="optionMark"
                                          Data="F1 M 9.97498,1.22334L 4.6983,9.09834L 4.52164,9.09834L 0,5.19331L 1.27664,3.52165L 4.255,6.08833L 8.33331,1.52588e-005L 9.97498,1.22334 Z "
                                          Fill="{StaticResource Theme.Accent}"
                                          Margin="1"
                                          Opacity="0"
                                          Stretch="None"/>
                                    <Rectangle x:Name="indeterminateMark"
                                               Fill="{StaticResource Theme.Accent}"
                                               Margin="2"
                                               Opacity="0"/>
                                </Grid>
                            </Border>
                            <ContentPresenter x:Name="contentPresenter"
                                              Grid.Column="1"
                                              Focusable="False"
                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                              Margin="{TemplateBinding Padding}"
                                              RecognizesAccessKey="True"
                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Grid>
                        
                        <ControlTemplate.Triggers>
                            <Trigger Property="HasContent" Value="true">
                                <Setter Property="FocusVisualStyle" Value="{StaticResource OptionMarkFocusVisual}"/>
                                <Setter Property="Padding" Value="4,-1,0,0"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="checkBoxBorder" Value="{StaticResource Theme.Item.Background}"/>
                                <Setter Property="BorderBrush" TargetName="checkBoxBorder" Value="{StaticResource Theme.Item.Foreground}"/>
                                <Setter Property="Fill" TargetName="optionMark" Value="{StaticResource Theme.Accent}"/>
                                <Setter Property="Fill" TargetName="indeterminateMark" Value="{StaticResource Theme.Accent}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="checkBoxBorder" Value="{StaticResource Theme.Item.Foreground_Disabled}"/>
                                <Setter Property="BorderBrush" TargetName="checkBoxBorder" Value="{StaticResource Theme.Item.Foreground_Disabled}"/>
                                <Setter Property="Fill" TargetName="optionMark" Value="{StaticResource Theme.Item.Foreground_Disabled}"/>
                                <Setter Property="Fill" TargetName="indeterminateMark" Value="{StaticResource Theme.Item.Foreground_Disabled}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="checkBoxBorder" Value="{StaticResource Theme.Item.Foreground}"/>
                                <Setter Property="BorderBrush" TargetName="checkBoxBorder" Value="{StaticResource Theme.Accent}"/>
                                <Setter Property="Fill" TargetName="optionMark" Value="{StaticResource Theme.Accent}"/>
                                <Setter Property="Fill" TargetName="indeterminateMark" Value="{StaticResource Theme.Accent}"/>
                            </Trigger>
                            <Trigger Property="IsChecked" Value="true">
                                <Setter Property="Opacity" TargetName="optionMark" Value="1"/>
                                <Setter Property="Opacity" TargetName="indeterminateMark" Value="0"/>
                            </Trigger>
                            <Trigger Property="IsChecked" Value="{x:Null}">
                                <Setter Property="Opacity" TargetName="optionMark" Value="0"/>
                                <Setter Property="Opacity" TargetName="indeterminateMark" Value="1"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        
        <Style TargetType="{x:Type TabControl}">
            <Setter Property="FontSize" Value="{StaticResource FontSize_Default}"/>
            <Setter Property="Background" Value="{StaticResource Theme.Window.Background}" />
            <Setter Property="Foreground" Value="{StaticResource Theme.Window.Foreground}" />
            <Setter Property="BorderBrush" Value="{StaticResource Theme.Window.BorderBrush}" />
            <Setter Property="BorderThickness" Value="{StaticResource Theme.Window.Margin}" />
        </Style>

        <Style TargetType="{x:Type TabItem}">
            <Setter Property="FontSize" Value="{StaticResource FontSize_Default}"/>
            <Setter Property="Background" Value="{StaticResource Theme.Item.Foreground}"/>
            <Setter Property="Foreground" Value="{StaticResource Theme.Item.Foreground}"/>
            <Setter Property="BorderBrush" Value="{StaticResource Theme.Item.BorderBrush}" />

            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TabItem}">
                        <Grid>
                            <Border Name="Border"
                                    BorderBrush="{StaticResource Theme.Item.BorderBrush}"
                                    BorderThickness="{StaticResource Theme.Item.TopRoundThickness}"
                                    CornerRadius="{StaticResource Theme.Item.TopRoundRadius}"
                                    Background="{StaticResource Theme.Item.Background_Disabled}">
                                <ContentPresenter x:Name="ContentSite"
                                                  ContentSource="Header"
                                                  VerticalAlignment="Center"
                                                  HorizontalAlignment="Center"
                                                  Margin="{StaticResource Theme.Item.Margin}"
                                                  RecognizesAccessKey="True"/>
                            </Border>
                        </Grid>

                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter TargetName="Border" Property="Background" Value="{StaticResource Theme.Item.Background}" />
                            </Trigger>
                            
                            <Trigger Property="IsSelected" Value="True">
                                <Setter Property="FontWeight" Value="Bold"/>
                                <Setter TargetName="Border" Property="Background" Value="{StaticResource Theme.Window.BorderBrush}" />
                            </Trigger>
                            
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style TargetType="{x:Type Grid}">
            <Setter Property="Background" Value="{StaticResource Theme.Window.Background}" />
        </Style>

        <Style TargetType="{x:Type Border}">
            <Setter Property="BorderBrush" Value="{StaticResource Theme.Window.BorderBrush}"/>
        </Style>
        
        <Style TargetType="{x:Type Label}">
            <Setter Property="FontSize" Value="{StaticResource FontSize_Default}"/>
            <Setter Property="Foreground" Value="{StaticResource Theme.Item.Foreground}" />
            
            
        </Style>

        <Style TargetType="{x:Type ComboBox}">
            <Setter Property="FontSize" Value="{StaticResource FontSize_Default}"/>
        </Style>

        <Style TargetType="{x:Type Button}">
            <Setter Property="FontSize" Value="{StaticResource FontSize_Big}"/>
            <Setter Property="Background" Value="{StaticResource Theme.Item.Background}" />
            <Setter Property="Foreground" Value="{StaticResource Theme.Item.Foreground}" />

            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border Background="{TemplateBinding Background}" CornerRadius="{StaticResource Theme.Item.Radius}">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" Margin="{StaticResource Theme.Item.Margin}"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>

            <Style.Triggers>
                
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="{StaticResource Theme.Item.Foreground}" />
                    <Setter Property="Foreground" Value="{StaticResource Theme.Item.Background}" />
                </Trigger>

                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="Background" Value="{StaticResource Theme.Item.Background_Disabled}" />
                    <Setter Property="Foreground" Value="{StaticResource Theme.Item.Foreground_Disabled}" />
                </Trigger>
                
            </Style.Triggers>
        </Style>

        <Style TargetType="{x:Type TextBox}">
            <Setter Property="FontSize" Value="{StaticResource FontSize_Big}"/>
        </Style>

        <Style TargetType="{x:Type ListView}">
            <Setter Property="FontSize" Value="{StaticResource FontSize_Default}"/>
            <Setter Property="Background" Value="{StaticResource Theme.Window.Background}" />
            <Setter Property="Foreground" Value="{StaticResource Theme.Window.Foreground}" />
            <Setter Property="BorderBrush" Value="{StaticResource Theme.Window.BorderBrush}" />
        </Style>

        <Style TargetType="{x:Type ListViewItem}">
            <Setter Property="FontSize" Value="{StaticResource FontSize_Default}"/>
            <Setter Property="Background" Value="{StaticResource Theme.Item.Background}" />
            <Setter Property="Foreground" Value="{StaticResource Theme.Item.Foreground}" />
            <Setter Property="Margin" Value="{StaticResource Theme.Item.OuterMargin}" />
            <Setter Property="HorizontalAlignment" Value="Stretch" />

            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ListViewItem}">
                        <Border Background="{TemplateBinding Background}" CornerRadius="{StaticResource Theme.Item.Radius}" BorderBrush="{StaticResource Theme.Item.BorderBrush}">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" Margin="{StaticResource Theme.Item.Margin}"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            
            <Style.Triggers>
                <Trigger Property="IsSelected" Value="True">
                    <Setter Property="Background" Value="{StaticResource Theme.Item.Foreground}" />
                    <Setter Property="Foreground" Value="{StaticResource Theme.Item.Background}" />
                </Trigger>
            </Style.Triggers>
            
        </Style>

    </Application.Resources>
</Application>
